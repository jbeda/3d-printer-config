[include mainsail.cfg]
#[include homing.cfg]
[include tool1.cfg]
[include nest.cfg]

[exclude_object]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_3B0040000251303532383235-if00
restart_method: command

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 5000             # Based on resonance testing
max_z_velocity: 30          # Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[input_shaper]
shaper_type_x: mzv
shaper_freq_x: 54.4
shaper_type_y: mzv
shaper_freq_y: 39.6

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to HV STEPPER 0
##  Endstop connected to X-ENDSTOP
[stepper_x]
step_pin: PB10
dir_pin: !PB11
enable_pin: !PG0
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: tmc5160_stepper_x:virtual_endstop
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 20
homing_retract_dist: 0
homing_positive_dir: true

[tmc5160 stepper_x]
cs_pin: PE15
spi_bus: spi4
diag0_pin: ^!PG1
driver_SGT: 1
interpolate: false
run_current: 0.8
sense_resistor: 0.075
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to HV STEPPER 1
##  Endstop connected to Y-ENDSTOP
[stepper_y]
step_pin: PF15
dir_pin: !PF14
enable_pin: !PE9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
# endstop_pin: tmc5160_stepper_y:virtual_endstop
endstop_pin: PC2
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc5160 stepper_y]
cs_pin: PE11
spi_bus: spi4
# diag0_pin: ^!PE10
# driver_SGT: 1
interpolate: false
run_current: 0.8
sense_resistor: 0.075
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to STEPPER 0
[stepper_z]
step_pin: PD4
dir_pin: !PD3
enable_pin: !PD7
rotation_distance: 40
gear_ratio: 80:16  
microsteps: 32
endstop_pin: probe:z_virtual_endstop
position_max: 280
position_min: -5
homing_speed: 10
second_homing_speed: 3
homing_retract_dist: 5

[tmc2209 stepper_z]
uart_pin: PD5
#diag_pin: ^!PD6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to STEPPER 1
[stepper_z1]
step_pin: PC12
dir_pin: PC11
enable_pin: !PD2
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PD0
#diag_pin: ^!PD1
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to STEPPER 2
[stepper_z2]
step_pin: PC9
dir_pin: !PC8
enable_pin: !PC10
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PA8
#diag_pin: ^!PA15
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to STEPPER 3
[stepper_z3]
step_pin: PG7
dir_pin: PG6
enable_pin: !PC7
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PG8
#diag_pin: ^!PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HEATBED
##  Thermistor - TH1
heater_pin: PG11
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PA2
pullup_resistor: 2200
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 120
control: pid
pid_kp: 38.111
pid_ki: 1.435
pid_kd: 252.962
pwm_cycle_time: 0.0166

#####################################################################
#   Probe
#####################################################################

##  TAP probe
[probe]
pin: tool1:PB6
x_offset: 0
y_offset: 0
speed: 10
samples: 1
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
#   Fan Control
#####################################################################

[controller_fan controller_fan]
##  Controller fan - FAN2
pin: PF7
kick_start_time: 0.5
heater: heater_bed

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting (Optional)
## Connected to LED-STRIP
[output_pin caselight]
pin: PE6
pwm:true
hardware_pwm: False
value: 1
shutdown_value: 0
cycle_time: 0.0166666

[resonance_tester]
accel_chip: adxl345
probe_points:
    150, 150, 20


#####################################################################
#   TH
# #####################################################################
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor chamber_temp]
sensor_type: Generic 3950
sensor_pin: PA0
min_temp: 0
max_temp: 100
gcode_id: chamber_th
pullup_resistor: 2200

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 5400 # 1.5 hours

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position: 150,150
speed:100
z_hop:10
z_hop_speed:10

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]
gantry_corners:
   -60,-10
   360,370
points:
   50,25
   50,225
   250,225
   250,25
speed: 500
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[bed_mesh]
speed: 300
horizontal_move_z: 3
mesh_min: 10, 10
mesh_max: 290,275
fade_start: 1.0
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
zero_reference_position: 150,150


#####################################################################
#   Macros
#####################################################################

[gcode_macro _QGL]
description: _QGL - Home and level the gantry
gcode:
    SAVE_GCODE_STATE NAME=STATE_QGL
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X150 Y150 Z30 F3600
    RESTORE_GCODE_STATE NAME=STATE_QGL
   
[gcode_macro _CQGL]
description: CQGL - Conditionally home and level the gantry
gcode:
  {% if not printer.quad_gantry_level.applied %}
    _QGL
  {% endif %}

[gcode_macro PREPRINT]
gcode:
    SAVE_GCODE_STATE NAME=STATE_PREPRINT
    G90 # Absolute
    _QGL # Will also home

    {% if params.mesh|default(true) %}
    BED_MESH_CALIBRATE
    {% endif %}

    M117 # Clear Message
   
    RESTORE_GCODE_STATE NAME=STATE_PREPRINT

[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(190)|float %}

    _CQGL                          ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed

    M104 S{EXTRUDER_TEMP}
    M190 S{BED_TEMP}                        ; set bed temp and wait for it reach temp
    M109 S{EXTRUDER_TEMP}               ; M109 heat and wait for it to reach temp

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro CHOME]
description: Homes XYZ axis only if printer is in a non-homed state
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}

[gcode_macro FRONT]
description: Moves the toolhead to the front
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G90
  G1 X{x_center} Y10 F7800

[gcode_macro _LOGO_PENDING]
gcode:
  SET_LED LED=tool1_rgb RED=0.15 GREEN=0.5 BLUE=0.75 WHITE=0 INDEX=1

[gcode_macro _LOGO_READY]
gcode:
  SET_LED LED=tool1_rgb RED=0.99 GREEN=0.0 BLUE=0.0 WHITE=0 INDEX=1

[gcode_macro _LOGO_OFF]
gcode:
  SET_LED LED=tool1_rgb RED=0 GREEN=0 BLUE=0 WHITE=0 INDEX=1
  

[gcode_macro _HEADLIGHT_ON]
gcode:
  SET_LED LED=tool1_rgb RED=1 GREEN=1 BLUE=1 WHITE=1.0 INDEX=2 TRANSMIT=0
  SET_LED LED=tool1_rgb RED=1 GREEN=1 BLUE=1 WHITE=1.0 INDEX=3


[gcode_macro _HEADLIGHT_OFF]
gcode:
  SET_LED LED=tool1_rgb RED=0 GREEN=0 BLUE=0 WHITE=0 INDEX=2 TRANSMIT=0
  SET_LED LED=tool1_rgb RED=0 GREEN=0 BLUE=0 WHITE=0 INDEX=3
  

[gcode_macro UNLOAD_FILAMENT]
variable_unload1_distance: 50
variable_unload2_distance:  75
variable_purge_distance:  10
gcode:
  {% set speed = params.SPEED|default(300) %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity * 60 %}
  SAVE_GCODE_STATE NAME=unload_state
  G91      # Relative Pos
  G92 E0   # Set Pos
  G1 E{purge_distance} F{speed} # purge
  G1 E-{unload1_distance} F{max_velocity} # fast-unload a bit
  G4 P4000 # wait 4s for tip to cool
  G1 E-{unload2_distance} F{max_velocity} # fast-unload the rest
  RESTORE_GCODE_STATE NAME=unload_state
  M400                        ; wait for moves to finish
  M117 Unload Complete!
  _LOGO_OFF

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  90
variable_purge_distance:  25
gcode:
  {% set speed = params.SPEED|default(300) %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
  SAVE_GCODE_STATE NAME=load_state
  G91
  G92 E0
  G1 E{load_distance} F{max_velocity} # fast-load
  G1 E{purge_distance} F{speed} # purge
  RESTORE_GCODE_STATE NAME=load_state
  M400                        ; wait for moves to finish
  M117 Load Complete!
  _LOGO_OFF
  _HEADLIGHT_OFF

[gcode_macro PRESENT]
gcode:
    SAVE_GCODE_STATE NAME=present_state
    G90 # Abs
    G0 X150 Y50 Z75 F20000
    RESTORE_GCODE_STATE NAME=present_state

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -0.419
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.014932, 0.036182, 0.011182, 0.028682, 0.038682
#*# 	  0.091182, 0.021182, 0.012432, 0.053682, 0.061182
#*# 	  0.051182, 0.019932, -0.001318, 0.019932, 0.052432
#*# 	  0.093682, 0.036182, 0.019932, 0.027432, 0.066182
#*# 	  0.182432, 0.124932, 0.123682, 0.134932, 0.137432
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 290.0
#*# min_y = 10.0
#*# max_y = 275.0
